"""add schema_registry table

Revision ID: adaed955754a
Revises: bb08533e115c
Create Date: 2025-08-26 13:51:09.216653

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'adaed955754a'
down_revision: Union[str, Sequence[str], None] = 'bb08533e115c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('schema_registry',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('schema', sa.JSON(), nullable=True),
    sa.Column('version', sa.String(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_schema_registry_id'), 'schema_registry', ['id'], unique=False)
    op.create_index(op.f('ix_schema_registry_source'), 'schema_registry', ['source'], unique=False)
    op.drop_index(op.f('ix_drift_stats_id'), table_name='drift_stats')
    op.drop_index(op.f('ix_drift_stats_rule_id'), table_name='drift_stats')
    op.drop_table('drift_stats')
    op.drop_index(op.f('ix_rules_id'), table_name='rules')
    op.drop_table('rules')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('rules',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('query', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('source', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('rules_pkey'))
    )
    op.create_index(op.f('ix_rules_id'), 'rules', ['id'], unique=False)
    op.create_table('drift_stats',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('rule_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('fp_rate', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('tp_rate', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('alert_volume', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('drift_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('last_checked', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('drift_stats_pkey'))
    )
    op.create_index(op.f('ix_drift_stats_rule_id'), 'drift_stats', ['rule_id'], unique=False)
    op.create_index(op.f('ix_drift_stats_id'), 'drift_stats', ['id'], unique=False)
    op.drop_index(op.f('ix_schema_registry_source'), table_name='schema_registry')
    op.drop_index(op.f('ix_schema_registry_id'), table_name='schema_registry')
    op.drop_table('schema_registry')
    # ### end Alembic commands ###
