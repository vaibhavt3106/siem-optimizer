"""init schema clean

Revision ID: 5a4db0d9217d
Revises: create_rules_and_history
Create Date: 2025-08-29 20:45:27.004770

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5a4db0d9217d'
down_revision: Union[str, Sequence[str], None] = 'create_rules_and_history'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_schema_registry_id'), table_name='schema_registry')
    op.drop_index(op.f('ix_schema_registry_source'), table_name='schema_registry')
    op.drop_table('schema_registry')
    op.create_index(op.f('ix_rule_history_id'), 'rule_history', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_rule_history_id'), table_name='rule_history')
    op.create_table('schema_registry',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('source', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('schema', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('version', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('last_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('schema_registry_pkey'))
    )
    op.create_index(op.f('ix_schema_registry_source'), 'schema_registry', ['source'], unique=False)
    op.create_index(op.f('ix_schema_registry_id'), 'schema_registry', ['id'], unique=False)
    # ### end Alembic commands ###
