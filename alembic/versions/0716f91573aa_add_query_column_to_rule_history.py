"""Add query column to rule_history

Revision ID: 0716f91573aa
Revises: 4d1f9c780e4b
Create Date: 2025-08-27 18:39:57.208262

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0716f91573aa'
down_revision: Union[str, Sequence[str], None] = '4d1f9c780e4b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_rule_history_id'), table_name='rule_history')
    op.drop_table('rule_history')
    op.drop_index(op.f('ix_drift_stats_id'), table_name='drift_stats')
    op.drop_index(op.f('ix_drift_stats_rule_id'), table_name='drift_stats')
    op.drop_table('drift_stats')
    op.drop_index(op.f('ix_rules_id'), table_name='rules')
    op.drop_table('rules')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('rules',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('query', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('source', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='rules_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_rules_id'), 'rules', ['id'], unique=False)
    op.create_table('drift_stats',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('rule_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('fp_rate', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('tp_rate', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('alert_volume', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('drift_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('last_checked', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('drift_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('drift_stats_pkey'))
    )
    op.create_index(op.f('ix_drift_stats_rule_id'), 'drift_stats', ['rule_id'], unique=False)
    op.create_index(op.f('ix_drift_stats_id'), 'drift_stats', ['id'], unique=False)
    op.create_table('rule_history',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('rule_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('old_query', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('changed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['rule_id'], ['rules.id'], name=op.f('rule_history_rule_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('rule_history_pkey'))
    )
    op.create_index(op.f('ix_rule_history_id'), 'rule_history', ['id'], unique=False)
    # ### end Alembic commands ###
